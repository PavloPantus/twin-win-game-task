{"version":3,"sources":["components/GameSlot/GameSlot.js","components/GameMachine/GameMachine.js","App.js","index.js"],"names":["GameSlot","_ref","setAnimationCountHandler","animationMove","animationStopSlot","slides","winLineTop","winLineMiddle","winLineBottom","react_default","a","createElement","className","onAnimationIteration","classNames","animation-move","animation-stop","map","img","key","src","path","alt","GameMachine","currentSlides","useMemo","i","push","concat","toString","Math","random","getNewOrderSlides","newSlides","oldSlides","Object","toConsumableArray","slice","_loop","min","max","randomIndex","indexOf","length","floor","filter","elem","index","_useState","useState","_useState2","slicedToArray","slotItems1","setSlotItems1","_useState3","_useState4","animationMoveSlot1","setAnimationMoveSlot1","_useState5","_useState6","animationCount1","setAnimationCount1","_useState7","_useState8","animationStopSlot1","setAnimationStopSlot1","_useState9","_useState10","winLineTopSlot1","setWinLineTopSlot1","_useState11","_useState12","winLineMiddleSlot1","setwinLineMiddleSlot1","_useState13","_useState14","winLineBottomSlot1","setwinLineBottomSlot1","_useState15","_useState16","slotItems2","setSlotItems2","_useState17","_useState18","animationMoveSlot2","setAnimationMoveSlot2","_useState19","_useState20","animationCount2","setAnimationCount2","_useState21","_useState22","animationStopSlot2","setAnimationStopSlot2","_useState23","_useState24","winLineTopSlot2","setWinLineTopSlot2","_useState25","_useState26","winLineMiddleSlot2","setwinLineMiddleSlot2","_useState27","_useState28","winLineBottomSlot2","setwinLineBottomSlot2","_useState29","_useState30","slotItems3","setSlotItems3","_useState31","_useState32","animationMoveSlot3","setAnimationMoveSlot3","_useState33","_useState34","animationCount3","setAnimationCount3","_useState35","_useState36","animationStopSlot3","setAnimationStopSlot3","_useState37","_useState38","winLineTopSlot3","setWinLineTopSlot3","_useState39","_useState40","winLineMiddleSlot3","setwinLineMiddleSlot3","_useState41","_useState42","winLineBottomSlot3","setwinLineBottomSlot3","_useState43","_useState44","slotItems4","setSlotItems4","_useState45","_useState46","animationMoveSlot4","setAnimationMoveSlot4","_useState47","_useState48","animationCount4","setAnimationCount4","_useState49","_useState50","animationStopSlot4","setAnimationStopSlot4","_useState51","_useState52","winLineTopSlot4","setWinLineTopSlot4","_useState53","_useState54","winLineMiddleSlot4","setwinLineMiddleSlot4","_useState55","_useState56","winLineBottomSlot4","setwinLineBottomSlot4","_useState57","_useState58","slotItems5","setSlotItems5","_useState59","_useState60","animationMoveSlot5","setAnimationMoveSlot5","_useState61","_useState62","animationCount5","setAnimationCount5","_useState63","_useState64","animationStopSlot5","setAnimationStopSlot5","_useState65","_useState66","winLineTopSlot5","setWinLineTopSlot5","_useState67","_useState68","winLineMiddleSlot5","setwinLineMiddleSlot5","_useState69","_useState70","winLineBottomSlot5","setwinLineBottomSlot5","_useState71","_useState72","startGame","setStartGame","_useState73","_useState74","showResult","setShowResult","useEffect","setTimeout","timeGapBetweanSlots","defaultMaxAnimationCount","GameSlot_GameSlot_GameSlot","type","onClick","App","GameMachine_GameMachine_GameMachine","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.1918c4a4.chunk.js","sourcesContent":["import React from 'react';\nimport './GameSlot.scss';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\n\nexport const GameSlot = (\n  {\n    setAnimationCountHandler,\n    animationMove,\n    animationStopSlot,\n    slides,\n    winLineTop,\n    winLineMiddle,\n    winLineBottom,\n  }\n) => (\n  <div className=\"container\">\n    {\n      winLineTop\n        && <div className=\"winLineTop\" />\n    }\n\n    {\n      winLineMiddle\n        && <div className=\"winLineMiddle\" />\n    }\n\n    {\n      winLineBottom\n        && <div className=\"winLineBottom\" />\n    }\n    <div\n      onAnimationIteration={() => {\n        setAnimationCountHandler();\n      }}\n      className={\n        classNames(\n          [\n            'slot',\n            {\n              'animation-move': animationMove,\n              'animation-stop': animationStopSlot,\n            },\n          ]\n        )\n      }\n\n    >\n      {slides.map(img => (\n        <img\n          key={img.key}\n          src={img.path}\n          alt=\"\"\n        />\n      ))}\n    </div>\n  </div>\n\n);\n\nGameSlot.propTypes = {\n  setAnimationCountHandler: PropTypes.func.isRequired,\n  animationMove: PropTypes.bool.isRequired,\n  animationStopSlot: PropTypes.bool.isRequired,\n  slides: PropTypes.arrayOf(PropTypes.shape({\n    path: PropTypes.string.isRequired,\n    key: PropTypes.oneOfType([\n      PropTypes.string, PropTypes.number,\n    ]).isRequired,\n  })).isRequired,\n  winLineTop: PropTypes.bool.isRequired,\n  winLineMiddle: PropTypes.bool.isRequired,\n  winLineBottom: PropTypes.bool.isRequired,\n};\n","import React, { useMemo, useState, useEffect } from 'react';\nimport './GameMachine.scss';\nimport { GameSlot } from '../GameSlot';\n\nexport const GameMachine = () => {\n  /* default array with pathes to images, it's items will be in slots */\n  const currentSlides = useMemo(\n    () => {\n      const slides = [];\n\n      for (let i = 1; i <= 13; i += 1) {\n        slides.push({\n          path: `images/game-images/(${i}).jpg`,\n          key: i.toString() + Math.random() * Math.random(),\n        });\n      }\n\n      for (let i = 0; i < 3; i += 1) {\n        slides.push({\n          path: slides[i].path, key: Math.random() * Math.random(),\n        });\n      }\n\n      return slides;\n    }, []\n  );\n\n  /* function gives new Array of slides that is randomly completed */\n\n  const getNewOrderSlides = () => {\n    const newSlides = [];\n    let oldSlides = [...currentSlides.slice(0, 13)];\n\n    for (let i = 0; i < 13; i += 1) {\n      const selfRandom = (min, max) => (\n        Math.floor(Math.random() * (max - min + 1)) + min\n      );\n\n      const randomIndex = oldSlides\n        .indexOf(oldSlides[selfRandom(0, oldSlides.length - 1)]);\n\n      newSlides.push(oldSlides[randomIndex]);\n\n      oldSlides = oldSlides.filter(\n        (elem, index) => index !== randomIndex\n      );\n    }\n\n    for (let i = 0; i < 3; i += 1) {\n      newSlides.push({\n        path: newSlides[i].path,\n        key: Math.random() * Math.random(),\n      });\n    }\n\n    return newSlides;\n  };\n\n  /* here are states for 5 slots, includes\n  *   where: slotItems - current items that will show in slot;\n  *\n  *   animationMoveSlot - boolean indicates on add class animation move or not\n  *   to slot;\n  *\n  *   animationCount - count of first animation iterations,\n  * (that one is infinite);\n  *\n  *   animationStopSlot - add second animation, animation-stop class, that\n  *  is not infinite;\n  *\n  *  winLine top, bot, middle - add win lines classes (\n  * if slot item has equal\n  * neighborhoods)\n  *\n  *\n  *\n  *\n  *   */\n\n  const [slotItems1, setSlotItems1] = useState(getNewOrderSlides());\n  const [animationMoveSlot1, setAnimationMoveSlot1] = useState(false);\n  const [animationCount1, setAnimationCount1] = useState(0);\n  const [animationStopSlot1, setAnimationStopSlot1] = useState(false);\n  const [winLineTopSlot1, setWinLineTopSlot1] = useState(false);\n  const [winLineMiddleSlot1, setwinLineMiddleSlot1] = useState(false);\n  const [winLineBottomSlot1, setwinLineBottomSlot1] = useState(false);\n\n  const [slotItems2, setSlotItems2] = useState(getNewOrderSlides());\n  const [animationMoveSlot2, setAnimationMoveSlot2] = useState(false);\n  const [animationCount2, setAnimationCount2] = useState(0);\n  const [animationStopSlot2, setAnimationStopSlot2] = useState(false);\n  const [winLineTopSlot2, setWinLineTopSlot2] = useState(false);\n  const [winLineMiddleSlot2, setwinLineMiddleSlot2] = useState(false);\n  const [winLineBottomSlot2, setwinLineBottomSlot2] = useState(false);\n\n  const [slotItems3, setSlotItems3] = useState(getNewOrderSlides());\n  const [animationMoveSlot3, setAnimationMoveSlot3] = useState(false);\n  const [animationCount3, setAnimationCount3] = useState(0);\n  const [animationStopSlot3, setAnimationStopSlot3] = useState(false);\n  const [winLineTopSlot3, setWinLineTopSlot3] = useState(false);\n  const [winLineMiddleSlot3, setwinLineMiddleSlot3] = useState(false);\n  const [winLineBottomSlot3, setwinLineBottomSlot3] = useState(false);\n\n  const [slotItems4, setSlotItems4] = useState(getNewOrderSlides());\n  const [animationMoveSlot4, setAnimationMoveSlot4] = useState(false);\n  const [animationCount4, setAnimationCount4] = useState(0);\n  const [animationStopSlot4, setAnimationStopSlot4] = useState(false);\n  const [winLineTopSlot4, setWinLineTopSlot4] = useState(false);\n  const [winLineMiddleSlot4, setwinLineMiddleSlot4] = useState(false);\n  const [winLineBottomSlot4, setwinLineBottomSlot4] = useState(false);\n\n  const [slotItems5, setSlotItems5] = useState(getNewOrderSlides());\n  const [animationMoveSlot5, setAnimationMoveSlot5] = useState(false);\n  const [animationCount5, setAnimationCount5] = useState(0);\n  const [animationStopSlot5, setAnimationStopSlot5] = useState(false);\n  const [winLineTopSlot5, setWinLineTopSlot5] = useState(false);\n  const [winLineMiddleSlot5, setwinLineMiddleSlot5] = useState(false);\n  const [winLineBottomSlot5, setwinLineBottomSlot5] = useState(false);\n\n  /* responsible for starting game process */\n  const [startGame, setStartGame] = useState(false);\n\n  /* show results */\n  const [showResult, setShowResult] = useState(false);\n\n  /* indicates how long to rotate slot */\n  const defaultMaxAnimationCount = 2;\n\n  /* indicates on gap betwean startin rotation of different slots */\n  const timeGapBetweanSlots = 50;\n\n  /* next 5 useEffects are handle adding stop animation\n  class(second animation) */\n\n  useEffect(() => {\n    if (animationCount1 > defaultMaxAnimationCount) {\n      setAnimationCount1(0);\n      setAnimationMoveSlot1(false);\n      setAnimationStopSlot1(true);\n    }\n  }, [animationCount1]);\n\n  useEffect(() => {\n    if (animationCount2 > defaultMaxAnimationCount) {\n      setAnimationCount2(0);\n      setAnimationMoveSlot2(false);\n      setAnimationStopSlot2(true);\n    }\n  }, [animationCount2]);\n\n  useEffect(() => {\n    if (animationCount3 > defaultMaxAnimationCount) {\n      setAnimationCount3(0);\n      setAnimationMoveSlot3(false);\n      setAnimationStopSlot3(true);\n    }\n  }, [animationCount3]);\n\n  useEffect(() => {\n    if (animationCount4 > defaultMaxAnimationCount) {\n      setAnimationCount4(0);\n      setAnimationMoveSlot4(false);\n      setAnimationStopSlot4(true);\n    }\n  }, [animationCount4]);\n\n  useEffect(() => {\n    if (animationCount5 > defaultMaxAnimationCount) {\n      setAnimationCount5(0);\n      setAnimationMoveSlot5(false);\n      setAnimationStopSlot5(true);\n    }\n  }, [animationCount5]);\n\n  /* use efect to start game process */\n\n  useEffect(() => {\n    if (startGame) {\n      /* hide previus win lines */\n\n      setShowResult(false);\n      setWinLineTopSlot1(false);\n      setwinLineMiddleSlot1(false);\n      setwinLineBottomSlot1(false);\n\n      setWinLineTopSlot2(false);\n      setwinLineMiddleSlot2(false);\n      setwinLineBottomSlot2(false);\n\n      setWinLineTopSlot3(false);\n      setwinLineMiddleSlot3(false);\n      setwinLineBottomSlot3(false);\n\n      setWinLineTopSlot4(false);\n      setwinLineMiddleSlot4(false);\n      setwinLineBottomSlot4(false);\n\n      setWinLineTopSlot5(false);\n      setwinLineMiddleSlot5(false);\n      setwinLineBottomSlot5(false);\n\n      /* starting game process,\n      adding class with infinite rotation to slots */\n\n      setAnimationStopSlot1(false);\n      setSlotItems1(getNewOrderSlides());\n      setAnimationMoveSlot1(true);\n\n      setTimeout(() => {\n        setAnimationStopSlot2(false);\n        setSlotItems2(getNewOrderSlides());\n        setAnimationMoveSlot2(true);\n      }, timeGapBetweanSlots);\n\n      setTimeout(() => {\n        setAnimationStopSlot3(false);\n        setSlotItems3(getNewOrderSlides());\n        setAnimationMoveSlot3(true);\n      }, timeGapBetweanSlots * 2);\n\n      setTimeout(() => {\n        setAnimationStopSlot4(false);\n        setSlotItems4(getNewOrderSlides());\n        setAnimationMoveSlot4(true);\n      }, timeGapBetweanSlots * 3);\n\n      setTimeout(() => {\n        setAnimationStopSlot5(false);\n        setSlotItems5(getNewOrderSlides());\n        setAnimationMoveSlot5(true);\n\n        /* after 5 seconds(first animation duration + second, + all gaps\n        between launches of each slot), show results of game\n        )  */\n\n        setTimeout(() => {\n          setShowResult(true);\n        }, defaultMaxAnimationCount * 1000 + 3000);\n\n        setStartGame(false);\n      }, timeGapBetweanSlots * 4);\n    }\n  }, [startGame]);\n\n  useEffect(() => {\n    if (showResult) {\n      /* show win lines for each slot */\n      /* first slot */\n\n      if (slotItems1[0].path === slotItems2[0].path) {\n        setWinLineTopSlot1(true);\n      }\n\n      if (slotItems1[1].path === slotItems2[1].path) {\n        setwinLineMiddleSlot1(true);\n      }\n\n      if (slotItems1[2].path === slotItems2[2].path) {\n        setwinLineBottomSlot1(true);\n      }\n\n      /* second slot */\n\n      if (slotItems2[0].path === slotItems3[0].path\n        || slotItems1[0].path === slotItems2[0].path) {\n        setWinLineTopSlot2(true);\n      }\n\n      if (slotItems2[1].path === slotItems3[1].path\n        || slotItems1[1].path === slotItems2[1].path) {\n        setwinLineMiddleSlot2(true);\n      }\n\n      if (slotItems2[2].path === slotItems3[2].path\n        || slotItems1[2].path === slotItems2[2].path) {\n        setwinLineBottomSlot2(true);\n      }\n\n      /* 3 slot */\n\n      if (slotItems2[0].path === slotItems3[0].path\n        || slotItems3[0].path === slotItems4[0].path) {\n        setWinLineTopSlot3(true);\n      }\n\n      if (slotItems2[1].path === slotItems3[1].path\n        || slotItems3[1].path === slotItems4[1].path) {\n        setwinLineMiddleSlot3(true);\n      }\n\n      if (slotItems2[2].path === slotItems3[2].path\n        || slotItems3[2].path === slotItems4[2].path) {\n        setwinLineBottomSlot3(true);\n      }\n\n      /* slot 4 */\n\n      if (slotItems4[0].path === slotItems3[0].path\n        || slotItems4[0].path === slotItems5[0].path) {\n        setWinLineTopSlot4(true);\n      }\n\n      if (slotItems4[1].path === slotItems3[1].path\n        || slotItems4[1].path === slotItems5[1].path) {\n        setwinLineMiddleSlot4(true);\n      }\n\n      if (slotItems4[2].path === slotItems3[2].path\n        || slotItems4[2].path === slotItems5[2].path) {\n        setwinLineBottomSlot4(true);\n      }\n\n      /* slot 5 */\n\n      if (slotItems5[0].path === slotItems4[0].path) {\n        setWinLineTopSlot5(true);\n      }\n\n      if (slotItems5[1].path === slotItems4[1].path) {\n        setwinLineMiddleSlot5(true);\n      }\n\n      if (slotItems5[2].path === slotItems4[2].path) {\n        setwinLineBottomSlot5(true);\n      }\n    }\n  }, [showResult]);\n\n  return (\n    <div className=\"game-machine\">\n\n      <GameSlot\n        setAnimationCountHandler={() => {\n          setAnimationCount1(animationCount1 + 1);\n        }}\n        animationMove={\n          animationMoveSlot1\n        }\n\n        animationStopSlot={\n          animationStopSlot1\n        }\n\n        slides={\n          slotItems1\n        }\n\n        winLineTop={winLineTopSlot1}\n        winLineMiddle={winLineMiddleSlot1}\n        winLineBottom={winLineBottomSlot1}\n\n      />\n\n      <GameSlot\n        setAnimationCountHandler={() => {\n          setAnimationCount2(animationCount2 + 1);\n        }}\n        animationMove={\n          animationMoveSlot2\n        }\n\n        animationStopSlot={\n          animationStopSlot2\n        }\n\n        slides={\n          slotItems2\n        }\n\n        winLineTop={winLineTopSlot2}\n        winLineMiddle={winLineMiddleSlot2}\n        winLineBottom={winLineBottomSlot2}\n      />\n\n      <GameSlot\n        setAnimationCountHandler={() => {\n          setAnimationCount3(animationCount3 + 1);\n        }}\n        animationMove={\n          animationMoveSlot3\n        }\n\n        animationStopSlot={\n          animationStopSlot3\n        }\n\n        slides={\n          slotItems3\n        }\n\n        winLineTop={winLineTopSlot3}\n        winLineMiddle={winLineMiddleSlot3}\n        winLineBottom={winLineBottomSlot3}\n      />\n\n      <GameSlot\n        setAnimationCountHandler={() => {\n          setAnimationCount4(animationCount4 + 1);\n        }}\n        animationMove={\n          animationMoveSlot4\n        }\n\n        animationStopSlot={\n          animationStopSlot4\n        }\n\n        slides={\n          slotItems4\n        }\n\n        winLineTop={winLineTopSlot4}\n        winLineMiddle={winLineMiddleSlot4}\n        winLineBottom={winLineBottomSlot4}\n\n      />\n\n      <GameSlot\n        setAnimationCountHandler={() => {\n          setAnimationCount5(animationCount5 + 1);\n        }}\n        animationMove={\n          animationMoveSlot5\n        }\n\n        animationStopSlot={\n          animationStopSlot5\n        }\n\n        slides={\n          slotItems5\n        }\n\n        winLineTop={winLineTopSlot5}\n        winLineMiddle={winLineMiddleSlot5}\n        winLineBottom={winLineBottomSlot5}\n\n      />\n\n      <button\n        type=\"button\"\n        onClick={\n          () => {\n            setStartGame(true);\n          }}\n        className=\"game-machine__play-button\"\n      >\n        PLAY\n      </button>\n    </div>\n  );\n};\n","import React from 'react';\nimport './App.scss';\nimport { GameMachine } from './components/GameMachine/GameMachine';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <GameMachine />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}